<%@ CodeTemplate Src="Common.vb" Inherits="FileHelperTemplate"  Debug="False" Language="VB" TargetLanguage="CS" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" %>    

<%@ Property Name="ClassName" Type="String" %>    

	public class <%= ClassName %>LinkProvider: AccessDataLink
	{
		private string mAccessFileName = @"c:\TestData.mdb";

		#region "  Constructors  "

		public <%= ClassName %>LinkProvider()
		{}

		public <%= ClassName %>LinkProvider(string fileName)
		{
			mAccessFileName = fileName;
		}

		#endregion

		#region "  RecordType  "
		public override Type RecordType
		{
			get { return typeof(<%= ClassName %>); }
		}
		#endregion

		#region "  FillRecord  "

		protected override object FillRecord(object[] fields)
		{
			<%= ClassName %> record = new <%= ClassName %>();

		<% Dim i As Integer = 0 %>
		<% For Each col As ColumnSchema in Table.Columns %>
			record.<%= col.Name %> = (<%= GetCsVariableType(col) %>) fields[<%= i%>];
		<% i = i + 1 %>
		<% Next %>

			return record;
		}
		#endregion

		#region "  GetSelectSql  "
		protected override string GetSelectSql()
		{
			return "SELECT * FROM <%= Table.Name %>";
		}
		#endregion

		#region "  GetInsertSql  "

		protected override string GetInsertSql(object record)
		{
			<%= ClassName %> obj = (<%= ClassName %>) record;

			return String.Format("INSERT INTO <%= Table.Name %> (<% For Each col As ColumnSchema in Table.Columns %><% if Not col is Table.Columns(0) Then %>, <% End If %><%= col.Name %><% Next %>) " + 
				" VALUES ( \"{0}\" <% For i = 1 to Table.Columns.Count - 1 %>, \"{<%= i %>}\" <% Next %> ) ",
			<% For Each col As ColumnSchema in Table.Columns %>
				obj.<%= col.Name %><% if Not col is Table.Columns(Table.Columns.Count-1) Then %>,<% End If %>
			<% Next %>
				);
			
		}

		#endregion

		public override string AccessFileName
		{
			get { return mAccessFileName; }
		}


	}

