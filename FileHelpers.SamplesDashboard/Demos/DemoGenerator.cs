// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace FileHelpers.SamplesDashboard.Demos
{
    using EnvDTE;
    using System;
    
    
    #line 1 "D:\Desarrollo\Devoo\FileHelpers\FileHelpers.SamplesDashboard\Demos\DemoGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class DemoGenerator : T4Toolbox.Template
    {
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            
            #line 4 "D:\Desarrollo\Devoo\FileHelpers\FileHelpers.SamplesDashboard\Demos\DemoGenerator.tt"


Process("Core");


            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 9 "D:\Desarrollo\Devoo\FileHelpers\FileHelpers.SamplesDashboard\Demos\DemoGenerator.tt"


public void Process(string folder)
{
	IServiceProvider hostServiceProvider = (IServiceProvider)Host;
	
	EnvDTE.DTE dte = (EnvDTE.DTE)hostServiceProvider.GetService(typeof(EnvDTE.DTE));
	
	/* Retrieve the project in which this template resides. */
	EnvDTE.ProjectItem containingProjectItem = dte.Solution.FindProjectItem(Host.TemplateFile);
	Project project = containingProjectItem.ContainingProject;
	
	ProcessProjectItem((ProjectItem)project.ProjectItems.Item(folder), null);
	
    WriteLine(Code.GenerateCode());
}

public void ProcessProjectItem(ProjectItem projectItem, ProjectItem parent)
{

	if (projectItem.ProjectItems.Count == 0)
	{
		
	    if (Path.GetExtension(projectItem.get_FileNames(0).ToLower()) != ".cs")
	        return;
		
		switch(Path.GetFileName(projectItem.get_FileNames(0).ToLower()))
		{ 
			case "generatedemowrappers.cs":
			case "filetestbase.cs":
					break;
				default:
					//if (projectItem.get_FileNames(0).ToLower().EndsWith(".txt"))
						RenderItemCore(projectItem, parent);
					break;
		}
	}
	else
	{
		foreach (ProjectItem childItem in projectItem.ProjectItems)
		{
			ProcessProjectItem(childItem, projectItem);
		}
	}

}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
